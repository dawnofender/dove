#version 330 core
out vec4 FragColor;

in vec3 TexCoords;

uniform samplerCube skybox;

float sunRadius = 0.01; // radians
float pi = 3.141592;
float sunGlowStrength = 0.0001;
float horizonStrength = 0.2;

void main()
{    
    vec3 direction = normalize(TexCoords);

    // FragColor = texture(skybox, TexCoords);
    // boring lets procedurally generate it :)

    // make a sun
    // dot product in the range 0-1
    float angleFromSun = acos(dot(vec3(0, 0, 1), direction));
    float normalDistanceFromSun = angleFromSun/(2*pi);

    // solid white sun
    float sun = int(angleFromSun < sunRadius); 

    // apply fresnel edges
    sun *= sqrt(1 - pow((angleFromSun/sunRadius), 2));
    
    sun = max(0, sun);
    
    

    // make the atmosphere
    float horizon = pow(1 - abs(asin(direction.y)*(2/pi)), 2) * (1-normalDistanceFromSun) * horizonStrength;
    float sunGlow = min(sunGlowStrength/(normalDistanceFromSun), 1);
    vec3 atmosphere = (vec3(0.5, 0.75, 0.9) + sunGlow + horizon) * mix(min(1, horizon/horizonStrength), 1, 0.75);
    atmosphere += vec3(0, 0, 0.05);
    vec3 sky = atmosphere + sun * vec3(1,1,1);
    FragColor = vec4(sky.x, sky.y, sky.z, 1);
    // FragColor = vec4(1, 0, 1, 0);
}
